generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CommunicationPreference {
  Holiday_Card
  Survey
  Event
  Thank_you
  Newsletter
  Research_update
}

model Event {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  topic       String
  size        Int
  date        DateTime
  location    String
  status      Boolean
  donors      DonorOnEvent[]
  sharedRoles RoleOnEvent[]
}

model Role {
  id           Int      @id @default(autoincrement())
  roleName     String   @unique
  users        User[]
  sharedEvents RoleOnEvent[]
}


model RoleOnEvent {
  eventId Int
  roleId  Int

  event   Event @relation(fields: [eventId], references: [id])
  role    Role  @relation(fields: [roleId], references: [id])

  @@id([eventId, roleId]) // Composite primary key
}


model User {
  id             Int     @id @default(autoincrement())
  employeeNumber Int     @unique
  userName       String  @unique
  roleId        Int
  role          Role?     @relation(fields: [roleId], references: [id])
  password      String
}



model Donor {
  id                         Int      @id @default(autoincrement())
  pmm                        String?
  smm                        String?
  vmm                        String?
  exclude                    Boolean
  deceased                   Boolean
  firstName                 String
  nickName                  String?
  lastName                  String
  organizationName          String?
  totalDonations            Int
  totalPledge               Int
  largestGift               Int
  largestGiftAppeal         String
  firstGiftDate             BigInt
  lastGiftDate              BigInt
  lastGiftAmount            Int
  lastGiftRequest           BigInt
  lastGiftAppeal            String
  addressLine1              String
  addressLine2              String?
  city                      String
  contactPhoneType          String
  phoneRestrictions         String?
  emailRestrictions         String?
  communicationRestrictions String?
  subscriptionInPerson      String
  subscriptionMagazine      String
  communicationPreference   CommunicationPreference[]
  events                DonorOnEvent[]
}

model DonorOnEvent {
  id       Int    @id @default(autoincrement())
  donorId  Int
  eventId  Int
  donor    Donor  @relation(fields: [donorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  event    Event  @relation(fields: [eventId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([donorId, eventId])
}